// *****************************************************************************
// ***********************   Регулярные выражения   ****************************
// *****************************************************************************

// ************************   Введение в регулярные выражения в JavaScript   *************************************

// 1. Дана строка:
// let str = 'ahb acb aeb aeeb adcb axeb';
// Напишите регулярку, которая найдет строки 'ahb', 'acb', 'aeb' по шаблону: буква 'a', любой символ, буква 'b'.

let str1 = "ahb acb aeb aeeb adcb axeb";
let res1 = str1.match(/a.b/g, "!");
console.log(res1);

// 2. Дана строка:
// let str = 'aba aca aea abba adca abea';
// Напишите регулярку, которая найдет строки 'abba', 'adca', 'abea' по шаблону: буква 'a', 2 любых символа, буква 'a'.

let str2 = "aba aca aea abba adca abea";
let res2 = str2.match(/a..a/g, "!");
console.log(res2);

// 3. Дана строка:
// let str = 'aba aca aea abba adca abea';
// Напишите регулярку, которая найдет строки 'abba' и 'abea', не захватив 'adca'.

let str3 = "aba aca aea abba adca abea";
let res3 = str3.match(/ab.a/g, "!");
console.log(res3);

// ********************   Операторы повторения символов в регулярках   **********************************************

// 4. Дана строка:
// let str = 'aa aba abba abbba abca abea';
// Напишите регулярку, которая найдет строки 'aba', 'abba', 'abbba' по шаблону:
// буква 'a', буква 'b' любое количество раз, буква 'a'.

let str4 = "aa aba abba abbba abca abea";
let res4 = str4.match(/ab+a/g, "!");
console.log(res4);

// 5. Дана строка:
// let str = 'aa aba abba abbba abca abea';
// Напишите регулярку, которая найдет строки 'aa', 'aba', 'abba', 'abbba' по шаблону:
// буква 'a', буква 'b' любое количество раз(в том числе 0 раз), буква 'a'.

let str5 = "aa aba abba abbba abca abea";
let res5 = str5.match(/ab*a/g);
console.log(res5);

// 6. Дана строка:
// let str = 'aa aba abba abbba abca abea';
// Напишите регулярку, которая найдет строки 'aa', 'aba'
// по шаблону: буква 'a', буква 'b' один раз или ниодного, буква 'a'.

let str6 = "aa aba abba abbba abca abea";
let res6 = str6.match(/ab?a/g);
console.log(res6);

// 7.Дана строка:
// let str = 'aa aba abba abbba abca abea';
// Напишите регулярку, которая найдет строки 'aa', 'aba', 'abba', 'abbba', не захватив 'abca' и 'abea'.

let str7 = "aa aba abba abbba abca abea";
let res7 = str7.match(/ab*a/g);
console.log(res7);

// ********************   Группирующие скобки в регулярках JavaScript   *********************************************

// 8. Дана строка:
// let str = 'ab abab abab abababab abea';
// Напишите регулярку, которая найдет строки по шаблону: строка 'ab' повторяется 1 или более раз.

let str8 = "ab abab abab abababab abea";
let res8 = str8.match(/(ab)+/g);
console.log(res8);

// ********************  Экранировка спецсимволов в регулярках JavaScript  *******************************************

// 9. Дана строка:
// let str = 'a.a aba aea';
// Напишите регулярку, которая найдет строку 'a.a', не захватив остальные.

let str9 = "a.a aba aea";
let res9 = str9.match(/a\.a/g);
console.log(res9);

// 10.Дана строка:
// let str = '2+3 223 2223';
// Напишите регулярку, которая найдет строку '2+3', не захватив остальные.

let str10 = "2+3 223 2223";
let res10 = str10.match(/2\+3/g);
console.log(res10);

// 11. Дана строка:
// let str = '23 2+3 2++3 2+++3 345 567';
// Напишите регулярку, которая найдет строки '2+3', '2++3', '2+++3',
// не захватив остальные (+ может быть любое количество).

let str11 = "23 2+3 2++3 2+++3 345 567";
let res11 = str11.match(/2(\+)+3/g);
console.log(res11);

//  12. Дана строка:
// let str = '23 2+3 2++3 2+++3 445 677';
// Напишите регулярку, которая найдет строки '23', '2+3', '2++3', '2+++3', не захватив остальные.

let str12 = "23 2+3 2++3 2+++3 445 677";
let res12 = str12.match(/2(\+)*3/g);
console.log(res12);

// 13. Дана строка:
// let str = '*+ *q+ *qq+ *qqq+ *qqq qqq+';
// Напишите регулярку, которая найдет строки '*q+', '*qq+', '*qqq+', не захватив остальные.

let str13 = "*+ *q+ *qq+ *qqq+ *qqq qqq+";
let res13 = str13.match(/\*q+\+/g);
console.log(res13);

// 14. Дана строка:
// let str = '[abc] {abc} abc (abc) [abc]';
// Напишите регулярку, которая найдет строки в квадратных скобках и заменят их на '!'.

let str14 = "[abc] {abc} abc (abc) [abc]";
let res14 = str14.replace(/\[abc\]/g, "!");
console.log(res14);

// ********************  Фигурные скобки в регулярных выражения JavaScript  *****************************************

// 15. Дана строка:
// let str = 'aa aba abba abbba abbbba abbbbba';
// Напишите регулярку, которая найдет строки 'abba', 'abbba', 'abbbba' и только их.

let str15 = "aa aba abba abbba abbbba abbbbba";
let res15 = str15.match(/ab{2,4}a/g);
console.log(res15);

// 16. Дана строка:
// let str = 'aa aba abba abbba abbbba abbbbba';
// Напишите регулярку, которая найдет строки вида 'aba', в которых 'b' встречается менее 3 - х раз(включительно).

let str16 = "aa aba abba abbba abbbba abbbbba";
let res16 = str16.match(/ab{1,3}a/g);
console.log(res16);

// 17. Дана строка:
// let str = 'aa aba abba abbba abbbba abbbbba';
// Напишите регулярку, которая найдет строки вида 'aba', в которых 'b' встречается более 4-х раз (включительно).

let str17 = "aa aba abba abbba abbbba abbbbba";
let res17 = str17.match(/ab{4,}a/g);
console.log(res17);

// ******************** Ограничение жадности в регулярных выражениях   **********************************************
// 18. Дана строка:
// let str = 'aba accca azzza wwwwa';
// Напишите регулярку, которая найдет все строки по краям которых стоят буквы 'a',
// и заменит каждую из них на '!'.Между буквами a может быть любой символ(кроме 'a').

let str18 = "aba accca azzza wwwwa";
let res18 = str18.match(/\a.+?\a/g);
console.log(res18);

// ******************** Группы символов в регулярных выражениях JavaScript *******************************************

// 19. Дана строка:
// let str = 'a1a a2a a3a a4a a5a aba aca';
// Напишите регулярку, которая найдет строки, в которых по краям стоят буквы 'a', а между ними одна цифра.

let str19 = "a1a a2a a3a a4a a5a aba aca";
let res19 = str19.match(/\a\d\a/g);
console.log(res19);

// 20. Дана строка:
// let str = 'a1a a22a a333a a4444a a55555a aba aca';
// Напишите регулярку, которая найдет строки, в которых по краям стоят буквы 'a', а между ними любое количество цифр.

let str20 = "a1a a22a a333a a4444a a55555a aba aca";
let res20 = str20.match(/\a\d+\a/g);
console.log(res20);

// 21. Дана строка:
// let str = 'aa a1a a22a a333a a4444a a55555a aba aca';
// Напишите регулярку, которая найдет строки, в которых по краям стоят буквы 'a',
// а между ними любое количество цифр(в том числе и ноль цифр, то есть строка 'aa').

let str21 = "aa a1a a22a a333a a4444a a55555a aba aca";
let res21 = str21.match(/\a\d*\a/g);
console.log(res21);

// 22. Дана строка:
// let str = 'avb a1b a2b a3b a4b a5b abb acb';
// Напишите регулярку, которая найдет строки следующего вида: по краям стоят буквы 'a' и 'b', а между ними - не число.

let str22 = "avb a1b a2b a3b a4b a5b abb acb";
let res22 = str22.match(/\a\D+?\b/g);
console.log(res22);

// 23. Дана строка:
// let str = 'ave a#b a2b a$b a4b a5b a-b acb';
// Напишите регулярку, которая найдет строки следующего вида:
// по краям стоят буквы 'a' и 'b', а между ними - не буква и не цифра.

let str23 = "ave a##b a2b a$b a4b a5b a-b acb";
let res23 = str23.match(/a\W+b/g);
console.log(res23);

// 24. Дана строка:
// let str = 'ave a#a a2a a$a a4a a5a a-a aca';
// Напишите регулярку, которая заменит все пробелы на '!'.

let str24 = "ave a#a a2a a$a a4a a5a a-a aca";
let res24 = str24.replace(/\s/g, "!");
console.log(res24);

// ********************  Наборы символов в регулярных выражениях JavaScript  *****************************************

// 25. Дана строка:
// let str = 'aba aea aca aza axa';
// Напишите регулярку, которая найдет по следующему шаблону:
// по краям стоят буквы 'a', а между ними - буква 'b', 'e' или 'x'.

let str25 = "aba aea aca aza axa";
let res25 = str25.match(/a[bex]a/g);
console.log(res25);

// 26. Дана строка:
// let str = 'a1a a3a a7a a9a aba';
// Напишите регулярку, которая найдет по следующему шаблону:
// по краям стоят буквы 'a', а между ними - цифра от 3 - х до 6 - ти.

let str26 = "a1a a3a a7a a9a aba";
let res26 = str26.match(/a[3-6]a/g);
console.log(res26);

// 27. Дана строка:
// let str = 'aba aea afa aha aga';
// Напишите регулярку, которая найдет по следующему шаблону:
// по краям стоят буквы 'a', а между ними - буква от a до g.

let str27 = "aba aea afa aha aga";
let res27 = str27.match(/a[a-g]a/g);
console.log(res27);

// 28. Дана строка:
// let str = 'aba aea afa aha aga';
// Напишите регулярку, которая найдет по следующему шаблону:
// по краям стоят буквы 'a', а между ними - буква от a до f и от j до z.

let str28 = "aba aea afa aha aga aza";
let res28 = str28.match(/a[a-fj-z]a/g);
console.log(res28);

// 29. Дана строка:
// let str = 'aAa aea aEa aJa a3a';
// Напишите регулярку, которая найдет по следующему шаблону:
// по краям стоят буквы 'a', а между ними - буква от a до f и от A до D.

let str29 = "aAa aea aEa aJa a3a";
let res29 = str29.match(/a[a-fA-D]a/g);
console.log(res29);

// 30. Дана строка:
// let str = 'aAXa aeffa aGha aza ax23a a3sSa';
// Напишите регулярку, которая найдет по следующему шаблону:
// по краям стоят буквы 'a', а между ними - маленькие латинские буквы, не затронув остальных.

let str30 = "aAXa aeffa aGha aza ax23a a3sSa";
let res30 = str30.match(/a[a-z]+a/g);
console.log(res30);

// 31. Дана строка:
// let str = 'aAXa aeffa aGha aza ax23a a3sSa';
// Напишите регулярку, которая найдет по следующему шаблону:
// по краям стоят буквы 'a', а между ними - маленькие и большие латинские буквы, не затронув остальных.

let str31 = "aAXa aeffa aGha aza ax23a a3sSa";
let res31 = str31.match(/a[a-zA-Z]+a/g);
console.log(res31);

// 32. Дана строка:
// let str = 'aAXa aeffa aGha aza ax23a a3sSa';
// Напишите регулярку, которая найдет по следующему шаблону:
// по краям стоят буквы 'a', а между ними - маленькие латинские буквы и цифры, не затронув остальных.

let str32 = "aAXa aeffa aGha aza ax23a a3sSa";
let res32 = str32.match(/a[a-z0-9]+a/g);
console.log(res32);

// ********************  Инвертирование наборов символов в регулярках  ********************************************

// 33. Напишите регулярку, которая найдет строки по шаблону: цифра '1',
// затем символ не 'e' и не 'x', цифра '2'.

let str33 = "aAXa aeffa aGha aza ax23a a3sSa 1as2";
let res33 = str33.match(/1[^ex]+?2/g);
console.log(res33);

// 34. Напишите регулярку, которая найдет строки по шаблону: буква 'x',
// затем НЕ цифра от 2 до 7, буква 'z'.

let str34 = "aAXa aeffa aGha aza ax23a a3sSa x1z";
let res34 = str34.match(/x[^2-7]z/g);
console.log(res34);

// 35. Напишите регулярку, которая найдет строки по шаблону: буква 'x',
// затем НЕ большая латинская буква от 1 и более раз, буква 'z'.

let str35 = "aAa aea aEa aJa a3a xwz x3545lklz";
let res35 = str35.match(/x[^A-Z]+?z/g);
console.log(res35);

// 36. Напишите регулярку, которая найдет строки по шаблону: буква 'x',
// затем НЕ большая маленькая латинская буква и не цифра от 1 до 5 от 1 и более раз, буква 'z'.

let str36 = "aAa aea aEa aJa a3a xwz xasd99z";
let res36 = str35.match(/\x[^A-Z1-5]+\z/g);
console.log(res36);

// ********************  Особенности кириллицы в регулярках JavaScript  *******************************************

// 37. Дана строка:
// let str = 'wйw wяw wёw wqw';
// Напишите регулярку, которая найдет строки по шаблону: по краям стоят буквы 'w', а между ними - буква кириллицы.

let str37 = "wйw wяw wёw wqw";
let res37 = str37.match(/\w[а-яё]+\w/g);
console.log(res37);

// 38. Дана строка:
// let str = 'ааа ббб ёёё ззз ййй ААА БББ ЁЁЁ ЗЗЗ ЙЙЙ';
// Напишите регулярку, которая найдет все слова по шаблону: любая кириллическая буква любое количество раз.

let str38 = "ааа ббб ёёё ззз ййй ААА БББ ЁЁЁ ЗЗЗ ЙЙЙ";
let res38 = str38.match(/[А-я]+/g);
console.log(res38);

// 39. Напишите регулярку, которая найдет строки по шаблону: цифра или точка от 1 и более раз.
let str39 = "1.1.1 wяw wёw wqw 1111 .....";
let res39 = str39.match(/[\d.]+/g);
console.log(res39);

// 40. Напишите регулярку, которая найдет строки по шаблону: не цифра и не буква от 'a' до 'g' от 3 до 7 раз.
let str40 = "wйw wяw wёw wqw 125 a87 z85";
let res40 = str40.match(/[^\da-gA-G]{3,7}/g);
console.log(res40);

// ********************  Спецсимволы-исключения внутри квадратных скобок  *******************************************
// 41. Дана строка:
// let str = 'x[]z x{}z x.z x()z';
// Напишите регулярку, которая найдет все слова по шаблону: буква 'x',
// затем любое количество любых квадратных скобок, затем буква 'z'.

let str41 = "x[]z x{}z x.z x()z";
let res41 = str41.match(/x[\[\]]+z/g);
console.log(res41);

// 42. Дана строка:
// let str = '[abc] {abc} abc (abc) [abc]';
// Напишите регулярку, которая найдет строки в квадратных скобках и заменят их на '!'.

let str42 = "[abc] {abc} abc (abc) [abc]";
let res42 = str42.replace(/\[abc\]+/g, "!");
console.log(res42);

// ********************  Символ шляпки внутри квадратных скобок регулярок  *******************************************
// 43. Дана строка:
// let str = '^xx axx ^zz bkk @ss';
// Напишите регулярку, которая найдет строки по шаблону: шляпка или собака, а затем две латинских буквы.

let str43 = "^xx axx ^zz bkk @ss";
let res43 = str43.match(/[@^]+[a-zA-Z]+/g);
console.log(res43);

// 44. Дана строка: !?
// let str = '^xx axx ^zz bkk @ss';
// Напишите регулярку, которая найдет строки по шаблону: НЕ шляпка и не собака, а затем две латинских буквы.

let str44 = "^xx axx ^zz bkk @ss";
let res44 = str44.match(/[^\^\@][a-zA-Z]+/g);
console.log(res44);

// 45. Дана строка:
// let str = '^xx axx ^zz bkk';
// Напишите регулярку, которая найдет строки по шаблону: НЕ шляпка, а затем две латинских буквы.

let str45 = "^xx axx ^zz bkk";
let res45 = str45.match(/[^\^]\w{2}/g);
console.log(res45);

// ********************  Особенности дефиса внутри квадратных скобок  *******************************************
// 46. Дана строка:
// let str = 'xaz xBz xcz x-z x@z';
// Найдите все строки по следующему шаблону: буква 'x', большая или маленькая буква или дефис, буква 'z'.

let str46 = "xaz xBz xcz x-z x@z";
let res46 = str46.match(/x[a-zA-Z\-]z/g);
console.log(res46);

// 47. Дана строка:
// let str = 'xaz x$z x-z xcz x+z x%z x*z';
// Найдите все строки по следующему шаблону: буква 'x', затем или доллар, или дефис или плюс, потом буква 'z'.

let str47 = "xaz x$z x-z xcz x+z x%z x*z";
let res47 = str47.match(/x[\$\-\+]z /g);
console.log(res47);
